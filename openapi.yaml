openapi: 3.0.3
info:
  title: Dart Backend Tech Test API
  description: A minimal backend for a fictional SaaS with Notes CRUD, API key auth, rate limiting, and feature flags
  version: 1.0.0
  contact:
    name: API Support

servers:
  - url: http://localhost:8080
    description: Local development server

security:
  - ApiKeyAuth: []

paths:
  /health:
    get:
      summary: Health check endpoint
      description: Returns OK if the server is healthy
      security: []
      tags:
        - System
      responses:
        "200":
          description: Server is healthy
          content:
            text/plain:
              schema:
                type: string
                example: ok

  /v1/feature-flags:
    get:
      summary: Get feature flags for the authenticated API key
      description: Returns available features based on the tier associated with the API key
      tags:
        - Feature Flags
      responses:
        "200":
          description: Feature flags for the current tier
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FeatureFlags"
        "401":
          $ref: "#/components/responses/Unauthorized"

  /v1/notes:
    get:
      summary: List all notes
      description: Returns a paginated list of notes
      tags:
        - Notes
      parameters:
        - name: page
          in: query
          description: Page number (default 1)
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: limit
          in: query
          description: Items per page (default 20)
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
      responses:
        "200":
          description: List of notes
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NoteList"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "429":
          $ref: "#/components/responses/RateLimitExceeded"

    post:
      summary: Create a new note
      description: Creates a new note with the provided title and content
      tags:
        - Notes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NoteInput"
      responses:
        "201":
          description: Note created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Note"
        "400":
          description: Invalid input
          content:
            text/plain:
              schema:
                type: string
        "401":
          $ref: "#/components/responses/Unauthorized"
        "429":
          $ref: "#/components/responses/RateLimitExceeded"

  /v1/notes/{id}:
    get:
      summary: Get a specific note
      description: Returns the note with the specified ID
      tags:
        - Notes
      parameters:
        - $ref: "#/components/parameters/NoteId"
      responses:
        "200":
          description: Note details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Note"
        "404":
          description: Note not found
          content:
            text/plain:
              schema:
                type: string
        "401":
          $ref: "#/components/responses/Unauthorized"
        "429":
          $ref: "#/components/responses/RateLimitExceeded"

    put:
      summary: Update a note
      description: Updates the note with the specified ID
      tags:
        - Notes
      parameters:
        - $ref: "#/components/parameters/NoteId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NoteInput"
      responses:
        "200":
          description: Note updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Note"
        "400":
          description: Invalid input
          content:
            text/plain:
              schema:
                type: string
        "404":
          description: Note not found
          content:
            text/plain:
              schema:
                type: string
        "401":
          $ref: "#/components/responses/Unauthorized"
        "429":
          $ref: "#/components/responses/RateLimitExceeded"

    delete:
      summary: Delete a note
      description: Deletes the note with the specified ID
      tags:
        - Notes
      parameters:
        - $ref: "#/components/parameters/NoteId"
      responses:
        "204":
          description: Note deleted successfully
        "404":
          description: Note not found
          content:
            text/plain:
              schema:
                type: string
        "401":
          $ref: "#/components/responses/Unauthorized"
        "429":
          $ref: "#/components/responses/RateLimitExceeded"

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
      description: API key for authentication. Available tiers - Sandbox, Standard, Enhanced, Enterprise

  parameters:
    NoteId:
      name: id
      in: path
      required: true
      description: Unique identifier of the note
      schema:
        type: string
        format: uuid

  schemas:
    Note:
      type: object
      required:
        - id
        - title
        - createdAt
        - updatedAt
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier
        title:
          type: string
          minLength: 1
          maxLength: 120
          description: Note title
        content:
          type: string
          maxLength: 10000
          description: Note content (optional)
        createdAt:
          type: string
          format: date-time
          description: Creation timestamp
        updatedAt:
          type: string
          format: date-time
          description: Last update timestamp

    NoteInput:
      type: object
      required:
        - title
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 120
          description: Note title
        content:
          type: string
          maxLength: 10000
          description: Note content (optional)

    NoteList:
      type: object
      required:
        - page
        - limit
        - total
        - items
      properties:
        page:
          type: integer
          description: Current page number
        limit:
          type: integer
          description: Items per page
        total:
          type: integer
          description: Total number of notes
        items:
          type: array
          items:
            $ref: "#/components/schemas/Note"

    FeatureFlags:
      type: object
      required:
        - tier
        - features
      properties:
        tier:
          type: string
          enum: [Sandbox, Standard, Enhanced, Enterprise]
          description: Current tier
        features:
          type: object
          description: Available features for this tier
          properties:
            notesCrud:
              type: boolean
            oauth:
              type: boolean
            advancedReports:
              type: boolean
            ssoSaml:
              type: boolean

  responses:
    Unauthorized:
      description: Missing or invalid API key
      content:
        text/plain:
          schema:
            type: string
            example: "Unauthorized: missing or invalid API key"

    RateLimitExceeded:
      description: Rate limit exceeded
      headers:
        Retry-After:
          description: Number of seconds to wait before retrying
          schema:
            type: integer
      content:
        text/plain:
          schema:
            type: string
            example: "Rate limit exceeded"
